# Generated by Django 5.1.1 on 2024-11-27 01:38

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CondicionMedica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('orden', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'condiciones_medicas',
                'ordering': ['orden'],
            },
        ),
        migrations.CreateModel(
            name='Paciente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numDoc', models.CharField(max_length=50)),
                ('nombre', models.CharField(max_length=50)),
                ('apellido', models.CharField(max_length=50)),
                ('fechaNac', models.DateField(blank=True, null=True)),
                ('sexo', models.CharField(choices=[('M', 'Masculino'), ('F', 'Femenino'), ('O', 'Otro')], max_length=1)),
                ('mail', models.EmailField(blank=True, max_length=50, null=True)),
                ('direccion', models.CharField(blank=True, max_length=100, null=True)),
                ('localidad', models.CharField(blank=True, max_length=60, null=True)),
                ('obraSocial', models.CharField(max_length=50)),
                ('plan', models.CharField(blank=True, max_length=50, null=True)),
                ('afiliado', models.CharField(max_length=50)),
                ('telefono', models.CharField(max_length=50)),
                ('celular', models.CharField(max_length=50)),
                ('profesion', models.CharField(max_length=50)),
                ('referente', models.CharField(blank=True, max_length=50, null=True)),
                ('fechaAlta', models.DateField(default=django.utils.timezone.now)),
                ('deBaja', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'pacientes',
            },
        ),
        migrations.CreateModel(
            name='HistoriaClinica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fechaAlta', models.DateField(default=django.utils.timezone.now)),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='historias_clinicas', to='main.paciente')),
            ],
            options={
                'db_table': 'historias_clinicas',
            },
        ),
        migrations.CreateModel(
            name='SignosVitales',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateTimeField(default=django.utils.timezone.now)),
                ('presion_sistolica', models.IntegerField(blank=True, null=True)),
                ('presion_diastolica', models.IntegerField(blank=True, null=True)),
                ('peso', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('glucemia', models.IntegerField(blank=True, null=True)),
                ('colesterol', models.IntegerField(blank=True, null=True)),
                ('historia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.historiaclinica')),
            ],
            options={
                'db_table': 'signos_vitales',
                'ordering': ['-fecha'],
            },
        ),
        migrations.CreateModel(
            name='TipoDocumento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50)),
                ('descripcion', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'tipos_documentos',
                'indexes': [models.Index(fields=['nombre'], name='nombre_tipodocumento_idx')],
            },
        ),
        migrations.AddField(
            model_name='paciente',
            name='idTipoDoc',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='main.tipodocumento'),
        ),
        migrations.CreateModel(
            name='CondicionMedicaHistoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('condicion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.condicionmedica')),
                ('historia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.historiaclinica')),
            ],
            options={
                'db_table': 'condiciones_medicas_historias',
                'unique_together': {('historia', 'condicion')},
            },
        ),
        migrations.AddIndex(
            model_name='historiaclinica',
            index=models.Index(fields=['fechaAlta'], name='historia_fechaAlta_idx'),
        ),
        migrations.AddIndex(
            model_name='historiaclinica',
            index=models.Index(fields=['paciente'], name='idPaciente_idx'),
        ),
        migrations.AddIndex(
            model_name='paciente',
            index=models.Index(fields=['nombre'], name='nombre_paciente_idx'),
        ),
        migrations.AddIndex(
            model_name='paciente',
            index=models.Index(fields=['apellido'], name='apellido_paciente_idx'),
        ),
        migrations.AddIndex(
            model_name='paciente',
            index=models.Index(fields=['fechaAlta'], name='paciente_fechaAlta_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='paciente',
            unique_together={('idTipoDoc', 'numDoc')},
        ),
    ]
