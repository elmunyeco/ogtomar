# Generated by Django 5.1.1 on 2025-05-22 20:04

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("main", "0002_lcdtm"),
    ]

    operations = [
        migrations.CreateModel(
            name="ConclusiónEcocardiograma",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "situs",
                    models.IntegerField(
                        blank=True,
                        choices=[(1, "Solitus"), (2, "Inversus"), (3, "Indeterminado")],
                        null=True,
                    ),
                ),
                ("comentario_situs", models.TextField(blank=True, null=True)),
                (
                    "vasos_normoimplantados",
                    models.IntegerField(
                        blank=True, choices=[(1, "No"), (2, "Sí")], null=True
                    ),
                ),
                ("comentario_vasos", models.TextField(blank=True, null=True)),
                (
                    "concordancia_atrioventricular",
                    models.IntegerField(
                        blank=True, choices=[(1, "No"), (2, "Sí")], null=True
                    ),
                ),
                ("comentario_concordancia", models.TextField(blank=True, null=True)),
                ("auricula_izq", models.CharField(blank=True, max_length=100)),
                ("ventriculo_izq", models.CharField(blank=True, max_length=100)),
                (
                    "funcion_sistolica",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (1, "Conservada"),
                            (2, "Deterioro de grado leve"),
                            (3, "Deterioro de grado moderado"),
                            (4, "Deterioro de grado severo"),
                        ],
                        null=True,
                    ),
                ),
                (
                    "funcion_diastolica",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (1, "Normal"),
                            (2, "Patrón de relajación prolongada"),
                            (3, "Patrón pseudonormalizado"),
                        ],
                        null=True,
                    ),
                ),
                (
                    "motilidad_segmentaria",
                    models.IntegerField(
                        blank=True, choices=[(1, "Normal"), (2, "Anormal")], null=True
                    ),
                ),
                ("comentario_motilidad", models.TextField(blank=True, null=True)),
                ("valvula_aortica", models.CharField(blank=True, max_length=50)),
                ("comentario_valvula_aortica", models.TextField(blank=True, null=True)),
                ("valvula_mitral", models.CharField(blank=True, max_length=50)),
                ("comentario_valvula_mitral", models.TextField(blank=True, null=True)),
                ("valvula_tricuspide", models.CharField(blank=True, max_length=50)),
                (
                    "comentario_valvula_tricuspide",
                    models.TextField(blank=True, null=True),
                ),
                ("valvula_pulmonar", models.CharField(blank=True, max_length=50)),
                (
                    "comentario_valvula_pulmonar",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "pericardio",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (1, "Libre"),
                            (2, "Derrame de grado leve"),
                            (3, "Derrame de grado moderado"),
                            (4, "Derrame de grado Severo"),
                        ],
                        null=True,
                    ),
                ),
                ("comentario_pericardio", models.TextField(blank=True, null=True)),
                (
                    "defectos_congenitos",
                    models.IntegerField(
                        blank=True, choices=[(1, "No"), (2, "Sí")], null=True
                    ),
                ),
                ("comentario_defectos", models.TextField(blank=True, null=True)),
                ("conclusion_texto", models.TextField(blank=True)),
                ("comentario_final", models.TextField(blank=True)),
            ],
            options={
                "verbose_name": "Conclusión de Ecocardiograma",
                "verbose_name_plural": "Conclusiones de Ecocardiograma",
            },
        ),
        migrations.CreateModel(
            name="EstudioEcocardiograma",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("fecha", models.DateField(default=django.utils.timezone.now)),
                (
                    "peso",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "talla",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=3, null=True
                    ),
                ),
                ("presion_sistolica", models.IntegerField(blank=True, null=True)),
                ("presion_diastolica", models.IntegerField(blank=True, null=True)),
                (
                    "auricula_izq_diametro",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "area_auricula_izq",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "plano_valvular_aortico",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "septum_diastole",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "pared_diastole",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "vent_izq_diastolico",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "vent_izq_sistolico",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "diametro_tsvi",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "fraccion_simpson",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "fraccion_acortamiento",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "tapse",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "vent_derecho",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "valvula_pulmonar",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "valvula_aortica",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "tracto_vent_izq",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "onda_e_mitral",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "onda_a_mitral",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "onda_e_tricuspidea",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "onda_a_tricuspidea",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "strain_longitudinal",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
            ],
            options={
                "verbose_name": "Estudio de Ecocardiograma",
                "verbose_name_plural": "Estudios de Ecocardiograma",
            },
        ),
        migrations.CreateModel(
            name="SegmentoEcocardiograma",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("numero_segmento", models.IntegerField()),
                (
                    "estado",
                    models.IntegerField(
                        choices=[
                            (0, "No evaluado"),
                            (1, "Normal"),
                            (2, "Hipoquinético"),
                            (3, "Aquinético"),
                            (4, "Disquinético"),
                        ],
                        default=0,
                    ),
                ),
            ],
            options={
                "verbose_name": "Segmento de Ecocardiograma",
                "verbose_name_plural": "Segmentos de Ecocardiograma",
            },
        ),
        migrations.AlterModelOptions(
            name="paciente",
            options={"ordering": ["-fechaAlta"]},
        ),
        migrations.RenameIndex(
            model_name="indicacionesvisitas",
            new_name="indicacione_histori_e75187_idx",
            old_name="indicacione_idHisto_248eeb_idx",
        ),
        migrations.RenameIndex(
            model_name="indicacionesvisitas",
            new_name="indicacione_histori_4b9d3d_idx",
            old_name="indicacione_idHisto_0bf324_idx",
        ),
        migrations.AlterField(
            model_name="indicacionesvisitas",
            name="historia_clinica",
            field=models.ForeignKey(
                db_column="historia_clinica_id",
                on_delete=django.db.models.deletion.CASCADE,
                to="main.historiaclinica",
            ),
        ),
        migrations.AlterField(
            model_name="paciente",
            name="afiliado",
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name="paciente",
            name="celular",
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name="paciente",
            name="obraSocial",
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name="paciente",
            name="profesion",
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name="paciente",
            name="telefono",
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AddField(
            model_name="estudioecocardiograma",
            name="historia",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="main.historiaclinica"
            ),
        ),
        migrations.AddField(
            model_name="conclusiónecocardiograma",
            name="estudio",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="conclusion",
                to="main.estudioecocardiograma",
            ),
        ),
        migrations.AddField(
            model_name="segmentoecocardiograma",
            name="estudio",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="segmentos",
                to="main.estudioecocardiograma",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="segmentoecocardiograma",
            unique_together={("estudio", "numero_segmento")},
        ),
    ]
